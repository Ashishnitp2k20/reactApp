{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","contactText","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","pause","resume","cancel","split","join","length","defaultProps","Alert","alert","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","classNames","my-3","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.bf3de919.chunk.js","sourcesContent":["import React from 'react'\r\nimport propTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        \r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/\">{props.aboutText}</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/\">{props.contactText}</a>\r\n          </li>\r\n        </ul>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n        </form> */}\r\n        <div className=\"form-check form-switch\">\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className={`form-check-label text-${props.mode===`light`?`dark`:`light`}`} htmlFor=\"flexSwitchCheckDefault\">Toggler</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    title: propTypes.string,\r\n    aboutText: propTypes.string,\r\n    contactText: propTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"tile here\",\r\n    aboutText: \"About text here\",\r\n    contactText: \"Contact text here\"\r\n};\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpclick = () =>{\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Uppercase\",\"success\");\r\n    }\r\n    const handleLoClick = () =>{\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lowercase\",\"success\");\r\n    }\r\n    const textToSpeech = () =>{\r\n        let msg = new SpeechSynthesisUtterance();\r\n        msg.text = text;\r\n        window.speechSynthesis.speak(msg);\r\n        props.showAlert(\"Text to Speech has been started\",\"success\");\r\n    }\r\n    const textToSpeechPause = () =>{\r\n        let msg = new SpeechSynthesisUtterance();\r\n        msg.text = text;\r\n        window.speechSynthesis.pause(msg);\r\n        props.showAlert(\"Text to Speech has been paused\",\"success\");\r\n    }\r\n    const textToSpeechPlay = () =>{\r\n        let msg = new SpeechSynthesisUtterance();\r\n        msg.text = text;\r\n        window.speechSynthesis.resume(msg);\r\n        props.showAlert(\"Text to Speech has been resume\",\"success\");\r\n    }\r\n    const textToSpeechCancel = () =>{\r\n        let msg = new SpeechSynthesisUtterance();\r\n        msg.text = text;\r\n        window.speechSynthesis.cancel(msg);\r\n        props.showAlert(\"Text to Speech has been canceled\",\"success\");\r\n    }\r\n    const handleClearClick = () =>{\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText ='';\r\n        setText(newText)\r\n        props.showAlert(\"Cleared all\",\"success\");\r\n    }\r\n    const copyText=() =>{\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text Copied!\",\"success\");\r\n    }\r\n    const handleOnExtraSpace = () =>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra spaces removed!\",\"success\");\r\n    }\r\n    const handleOnChange = (event) =>{\r\n    //    console.log(\"On change!\")\r\n       setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n    // text = \"new Text\" --> wrong way to change the state\r\n    // setText(\"new text\");  --> correct way to change the state\r\n  return (\r\n      <>\r\n    <div className=\"container\" style={{color: props.mode===`dark`?`white`:`#042743`}}>\r\n    <h1>{props.heading}</h1>\r\n<div className=\"mb-3\">\r\n  <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode===`dark`?`grey`:`light`,color: props.mode===`dark`?`white`:`#042743`}} id=\"myBox\" rows=\"8\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary ms-2 mt-2\" onClick={handleUpclick}>Convert to Uppercase</button>\r\n<button className=\"btn btn-primary ms-2 mt-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n<button className=\"btn btn-primary ms-2 mt-2\" onClick={handleClearClick}>Clear all</button>\r\n<button className=\"btn btn-primary ms-2 mt-2\" onClick={copyText}>Copy Text</button>\r\n<button className=\"btn btn-primary ms-2 mt-2\" onClick={textToSpeech}>Text to Speech</button>\r\n<button className=\"btn btn-primary ms-2 mt-2\" onClick={textToSpeechPause}>Pause Text to Speech</button>\r\n<button className=\"btn btn-primary ms-2 mt-2\" onClick={textToSpeechPlay}>Play Text to Speech</button>\r\n<button className=\"btn btn-primary ms-2 mt-2\" onClick={textToSpeechCancel}>Cancel Text to Speech</button>\r\n<button className=\"btn btn-primary ms-2 mt-2\" onClick={handleOnExtraSpace}>Remove all extra Spaces</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode===`dark`?`white`:`#042743`}}>\r\n        <h1>Your text summary</h1>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length} minutes away to read the contents.</p>\r\n        <h2 className=\"m-auto\">Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something in the above text-box to preview it here!\"}</p>\r\n        {/* <h2>After trimming</h2>\r\n        <p>{text.length} characters</p> */}\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nfunction Alert(props){\r\n    // const capitalize = (word) =>{\r\n    //     const lower = word.toLowerCase();\r\n    //     return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    // }\r\n    return(\r\n        props.alert &&\r\n<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong> {props.alert.type }</strong>:{props.alert.msg}\r\n</div>\r\n    )\r\n}\r\nexport default Alert;","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React , {useState} from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const[mode, setMode] = useState('light');\n  const[alert,setAlert] = useState(null);\n\n  const showAlert= (message, type) =>{\n         setAlert({\n          msg: message,\n          type: type\n         })\n         setTimeout(() => {\n          setAlert(null);\n         }, 1525);\n  }\n  const toggleMode= () =>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark Mode is enabled\",\"success\");\n      // document.title = 'Textutils - Dark Mode';\n      // setInterval(() =>{\n      //   document.title = 'Textutils is Amazing';\n      // }, 2000)\n      // setInterval(() =>{\n      //   document.title = 'Install Textutils';\n      // }, 1500)\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = '#fff';\n      showAlert(\"Light Mode is enabled\",\"success\");\n      // document.title = 'Textutils - Light Mode';\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n<Navbar title=\"Textutils\" aboutText=\"About Textutils\" contactText=\"Contact Us\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert={alert}/>\n<div classNames=\"container my-3\">\n{/* <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\">\n          <TextForm heading=\"Enter the text to analyze below...\" showAlert={showAlert} mode={mode} my-3/>\n          </Route>\n</Switch> */}\n{/* <About/> */}\n\n<TextForm heading=\"Enter the text to analyze below...\" showAlert={showAlert} mode={mode} my-3/>\n</div>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}